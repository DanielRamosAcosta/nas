{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SFTPGo Configuration Schema",
  "type": "object",
  "properties": {
    "common": {
      "type": "object",
      "description": "Common configuration settings that apply globally to all SFTPGo services and protocols.",
      "properties": {
        "idle_timeout": {
          "type": "number",
          "description": "Time in minutes after which idle connections will be closed. 0 means disabled."
        },
        "upload_mode": {
          "type": "number",
          "description": "Upload mode: 0 = standard, 1 = atomic (upload to temp file then rename), 2 = atomic with resume support."
        },
        "actions": {
          "type": "object",
          "description": "Configuration for actions that can be executed on various file system events.",
          "properties": {
            "execute_on": {
              "type": "array",
              "description": "List of events that trigger the execution of actions (e.g., upload, download, delete).",
              "items": {}
            },
            "execute_sync": {
              "type": "array",
              "description": "List of events for which actions should be executed synchronously.",
              "items": {}
            },
            "hook": {
              "type": "string",
              "description": "Path to external program or HTTP URL to call for action execution."
            }
          },
          "required": [
            "execute_on",
            "execute_sync",
            "hook"
          ]
        },
        "setstat_mode": {
          "type": "number",
          "description": "Set stat mode: 0 = ignore setstat, 1 = enable setstat, 2 = enable setstat for owners only."
        },
        "rename_mode": {
          "type": "number",
          "description": "Rename mode: 0 = standard, 1 = atomic rename with cross-filesystem support."
        },
        "resume_max_size": {
          "type": "number",
          "description": "Maximum file size in bytes for resume support. 0 means no limit."
        },
        "temp_path": {
          "type": "string",
          "description": "Path for temporary files during uploads. If empty, the user's home directory is used."
        },
        "proxy_protocol": {
          "type": "number",
          "description": "Proxy protocol support: 0 = disabled, 1 = v1, 2 = v2, 3 = v1 and v2."
        },
        "proxy_allowed": {
          "type": "array",
          "description": "List of IP addresses/networks allowed to send proxy headers.",
          "items": {}
        },
        "proxy_skipped": {
          "type": "array",
          "description": "List of IP addresses/networks for which proxy headers should be ignored.",
          "items": {}
        },
        "startup_hook": {
          "type": "string",
          "description": "Path to external program or HTTP URL to call on SFTPGo startup."
        },
        "post_connect_hook": {
          "type": "string",
          "description": "Path to external program or HTTP URL to call after a client connects."
        },
        "post_disconnect_hook": {
          "type": "string",
          "description": "Path to external program or HTTP URL to call after a client disconnects."
        },
        "data_retention_hook": {
          "type": "string",
          "description": "Path to external program or HTTP URL to call for data retention policies."
        },
        "max_total_connections": {
          "type": "number",
          "description": "Maximum number of concurrent connections. 0 means no limit."
        },
        "max_per_host_connections": {
          "type": "number",
          "description": "Maximum number of concurrent connections per host. 0 means no limit."
        },
        "allowlist_status": {
          "type": "number",
          "description": "IP allowlist status: 0 = disabled, 1 = enabled."
        },
        "allow_self_connections": {
          "type": "number",
          "description": "Allow connections from the same IP as SFTPGo: 0 = disabled, 1 = enabled."
        },
        "umask": {
          "type": "string",
          "description": "Default umask for new files and directories (octal format, e.g., '0022')."
        },
        "server_version": {
          "type": "string",
          "description": "Custom server version string to report to clients."
        },
        "metadata": {
          "type": "object",
          "description": "Configuration for file metadata handling.",
          "properties": {
            "read": {
              "type": "number",
              "description": "Enable metadata reading: 0 = disabled, 1 = enabled."
            }
          },
          "required": [
            "read"
          ]
        },
        "defender": {
          "type": "object",
          "description": "Configuration for the built-in defender to protect against brute force attacks.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable or disable the defender."
            },
            "driver": {
              "type": "string",
              "description": "Defender driver: 'memory' for in-memory storage or 'provider' to use the data provider."
            },
            "ban_time": {
              "type": "number",
              "description": "Initial ban time in minutes."
            },
            "ban_time_increment": {
              "type": "number",
              "description": "Ban time increment percentage for repeated violations."
            },
            "threshold": {
              "type": "number",
              "description": "Score threshold above which an IP is banned."
            },
            "score_invalid": {
              "type": "number",
              "description": "Score to assign for invalid login attempts."
            },
            "score_valid": {
              "type": "number",
              "description": "Score to assign for valid login attempts (usually negative to reduce score)."
            },
            "score_limit_exceeded": {
              "type": "number",
              "description": "Score to assign when connection limits are exceeded."
            },
            "score_no_auth": {
              "type": "number",
              "description": "Score to assign when no authentication method is provided."
            },
            "observation_time": {
              "type": "number",
              "description": "Time window in minutes for score observation."
            },
            "entries_soft_limit": {
              "type": "number",
              "description": "Soft limit for defender entries, after which cleanup starts."
            },
            "entries_hard_limit": {
              "type": "number",
              "description": "Hard limit for defender entries, no new entries accepted beyond this."
            },
            "login_delay": {
              "type": "object",
              "description": "Configuration for login delays to slow down brute force attacks.",
              "properties": {
                "success": {
                  "type": "number",
                  "description": "Delay in milliseconds after successful login."
                },
                "password_failed": {
                  "type": "number",
                  "description": "Delay in milliseconds after failed password authentication."
                }
              },
              "required": [
                "success",
                "password_failed"
              ]
            }
          },
          "required": [
            "enabled",
            "driver",
            "ban_time",
            "ban_time_increment",
            "threshold",
            "score_invalid",
            "score_valid",
            "score_limit_exceeded",
            "score_no_auth",
            "observation_time",
            "entries_soft_limit",
            "entries_hard_limit",
            "login_delay"
          ]
        },
        "rate_limiters": {
          "type": "array",
          "description": "Configuration for rate limiters to control connection and transfer rates.",
          "items": {
            "type": "object",
            "properties": {
              "average": {
                "type": "number",
                "description": "Average rate limit (connections/transfers per period)."
              },
              "period": {
                "type": "number",
                "description": "Time period in milliseconds for rate limiting calculations."
              },
              "burst": {
                "type": "number",
                "description": "Maximum burst size allowed above the average rate."
              },
              "type": {
                "type": "number",
                "description": "Rate limiter type: 1 = global, 2 = per-host."
              },
              "protocols": {
                "type": "array",
                "description": "List of protocols this rate limiter applies to (e.g., 'SSH', 'FTP', 'DAV', 'HTTP').",
                "items": {
                  "type": "string"
                }
              },
              "generate_defender_events": {
                "type": "boolean",
                "description": "Whether to generate defender events when rate limits are exceeded."
              },
              "entries_soft_limit": {
                "type": "number",
                "description": "Soft limit for rate limiter entries."
              },
              "entries_hard_limit": {
                "type": "number",
                "description": "Hard limit for rate limiter entries."
              }
            },
            "required": [
              "average",
              "period",
              "burst",
              "type",
              "protocols",
              "generate_defender_events",
              "entries_soft_limit",
              "entries_hard_limit"
            ]
          }
        },
        "event_manager": {
          "type": "object",
          "description": "Configuration for the event manager that handles file system events.",
          "properties": {
            "enabled_commands": {
              "type": "array",
              "description": "List of enabled event manager commands.",
              "items": {}
            }
          },
          "required": [
            "enabled_commands"
          ]
        }
      },
      "required": [
        "idle_timeout",
        "upload_mode",
        "actions",
        "setstat_mode",
        "rename_mode",
        "resume_max_size",
        "temp_path",
        "proxy_protocol",
        "proxy_allowed",
        "proxy_skipped",
        "startup_hook",
        "post_connect_hook",
        "post_disconnect_hook",
        "data_retention_hook",
        "max_total_connections",
        "max_per_host_connections",
        "allowlist_status",
        "allow_self_connections",
        "umask",
        "server_version",
        "metadata",
        "defender",
        "rate_limiters",
        "event_manager"
      ]
    },
    "acme": {
      "type": "object",
      "description": "Configuration for automatic SSL certificate management using ACME protocol (Let's Encrypt).",
      "properties": {
        "domains": {
          "type": "array",
          "description": "List of domain names for which to obtain SSL certificates.",
          "items": {}
        },
        "email": {
          "type": "string",
          "description": "Email address for ACME account registration."
        },
        "key_type": {
          "type": "string",
          "description": "Private key type for certificates (e.g., 'RSA2048', 'RSA4096', 'EC256', 'EC384')."
        },
        "certs_path": {
          "type": "string",
          "description": "Directory path where ACME certificates will be stored."
        },
        "ca_endpoint": {
          "type": "string",
          "description": "ACME Certificate Authority endpoint URL (e.g., Let's Encrypt production or staging)."
        },
        "renew_days": {
          "type": "number",
          "description": "Number of days before expiration to renew certificates."
        },
        "http01_challenge": {
          "type": "object",
          "description": "Configuration for HTTP-01 ACME challenge method.",
          "properties": {
            "port": {
              "type": "number",
              "description": "Port to use for HTTP-01 challenge server."
            },
            "proxy_header": {
              "type": "string",
              "description": "Proxy header to check for real client IP during HTTP-01 challenge."
            },
            "webroot": {
              "type": "string",
              "description": "Webroot directory for HTTP-01 challenge files."
            }
          },
          "required": [
            "port",
            "proxy_header",
            "webroot"
          ]
        },
        "tls_alpn01_challenge": {
          "type": "object",
          "description": "Configuration for TLS-ALPN-01 ACME challenge method.",
          "properties": {
            "port": {
              "type": "number",
              "description": "Port to use for TLS-ALPN-01 challenge server."
            }
          },
          "required": [
            "port"
          ]
        }
      },
      "required": [
        "domains",
        "email",
        "key_type",
        "certs_path",
        "ca_endpoint",
        "renew_days",
        "http01_challenge",
        "tls_alpn01_challenge"
      ]
    },
    "sftpd": {
      "type": "object",
      "description": "Configuration for the SFTP server daemon.",
      "properties": {
        "bindings": {
          "type": "array",
          "description": "List of network bindings for the SFTP server.",
          "items": {
            "type": "object",
            "properties": {
              "port": {
                "type": "number",
                "description": "Port number to bind the SFTP server to."
              },
              "address": {
                "type": "string",
                "description": "IP address to bind the SFTP server to (empty for all interfaces)."
              },
              "apply_proxy_config": {
                "type": "boolean",
                "description": "Whether to apply proxy configuration to this binding."
              }
            },
            "required": [
              "port",
              "address",
              "apply_proxy_config"
            ]
          }
        },
        "max_auth_tries": {
          "type": "number",
          "description": "Maximum number of authentication attempts per connection."
        },
        "host_keys": {
          "type": "array",
          "description": "List of host key file paths for SSH server authentication.",
          "items": {}
        },
        "host_certificates": {
          "type": "array",
          "description": "List of host certificate file paths for SSH server authentication.",
          "items": {}
        },
        "host_key_algorithms": {
          "type": "array",
          "description": "List of enabled host key algorithms for SSH.",
          "items": {}
        },
        "kex_algorithms": {
          "type": "array",
          "description": "List of enabled key exchange algorithms for SSH.",
          "items": {}
        },
        "min_dh_group_exchange_key_size": {
          "type": "number",
          "description": "Minimum Diffie-Hellman group exchange key size in bits."
        },
        "ciphers": {
          "type": "array",
          "description": "List of enabled cipher algorithms for SSH encryption.",
          "items": {}
        },
        "macs": {
          "type": "array",
          "description": "List of enabled MAC (Message Authentication Code) algorithms for SSH.",
          "items": {}
        },
        "public_key_algorithms": {
          "type": "array",
          "description": "List of enabled public key signature algorithms for SSH.",
          "items": {}
        },
        "trusted_user_ca_keys": {
          "type": "array",
          "description": "List of trusted user Certificate Authority key file paths.",
          "items": {}
        },
        "revoked_user_certs_file": {
          "type": "string",
          "description": "Path to file containing revoked user certificates."
        },
        "login_banner_file": {
          "type": "string",
          "description": "Path to file containing login banner text to display to users."
        },
        "enabled_ssh_commands": {
          "type": "array",
          "description": "List of SSH commands that are enabled (e.g., 'scp', 'rsync').",
          "items": {
            "type": "string"
          }
        },
        "keyboard_interactive_authentication": {
          "type": "boolean",
          "description": "Whether to enable keyboard-interactive authentication method."
        },
        "keyboard_interactive_auth_hook": {
          "type": "string",
          "description": "Path to external program or HTTP URL for keyboard-interactive authentication."
        },
        "password_authentication": {
          "type": "boolean",
          "description": "Whether to enable password authentication method."
        },
        "folder_prefix": {
          "type": "string",
          "description": "Virtual folder prefix to prepend to user home directories."
        }
      },
      "required": [
        "bindings",
        "max_auth_tries",
        "host_keys",
        "host_certificates",
        "host_key_algorithms",
        "kex_algorithms",
        "min_dh_group_exchange_key_size",
        "ciphers",
        "macs",
        "public_key_algorithms",
        "trusted_user_ca_keys",
        "revoked_user_certs_file",
        "login_banner_file",
        "enabled_ssh_commands",
        "keyboard_interactive_authentication",
        "keyboard_interactive_auth_hook",
        "password_authentication",
        "folder_prefix"
      ]
    },
    "ftpd": {
      "type": "object",
      "description": "Configuration for the FTP server daemon.",
      "properties": {
        "bindings": {
          "type": "array",
          "description": "List of network bindings for the FTP server.",
          "items": {
            "type": "object",
            "properties": {
              "port": {
                "type": "number",
                "description": "Port number to bind the FTP server to."
              },
              "address": {
                "type": "string",
                "description": "IP address to bind the FTP server to (empty for all interfaces)."
              },
              "apply_proxy_config": {
                "type": "boolean",
                "description": "Whether to apply proxy configuration to this binding."
              },
              "tls_mode": {
                "type": "number",
                "description": "TLS mode: 0 = disabled, 1 = explicit, 2 = implicit."
              },
              "tls_session_reuse": {
                "type": "number",
                "description": "TLS session reuse: 0 = disabled, 1 = enabled."
              },
              "certificate_file": {
                "type": "string",
                "description": "Path to TLS certificate file for this binding."
              },
              "certificate_key_file": {
                "type": "string",
                "description": "Path to TLS private key file for this binding."
              },
              "min_tls_version": {
                "type": "number",
                "description": "Minimum TLS version: 12 = TLS 1.2, 13 = TLS 1.3."
              },
              "force_passive_ip": {
                "type": "string",
                "description": "IP address to force for passive mode connections."
              },
              "passive_ip_overrides": {
                "type": "array",
                "description": "List of passive IP overrides for specific networks.",
                "items": {}
              },
              "passive_host": {
                "type": "string",
                "description": "Hostname to advertise for passive mode connections."
              },
              "client_auth_type": {
                "type": "number",
                "description": "Client authentication type: 0 = disabled, 1 = request cert, 2 = require cert."
              },
              "tls_cipher_suites": {
                "type": "array",
                "description": "List of enabled TLS cipher suites.",
                "items": {}
              },
              "passive_connections_security": {
                "type": "number",
                "description": "Security mode for passive connections: 0 = inherit, 1 = plain, 2 = TLS."
              },
              "active_connections_security": {
                "type": "number",
                "description": "Security mode for active connections: 0 = inherit, 1 = plain, 2 = TLS."
              },
              "ignore_ascii_transfer_type": {
                "type": "number",
                "description": "Ignore ASCII transfer type and always use binary: 0 = disabled, 1 = enabled."
              },
              "debug": {
                "type": "boolean",
                "description": "Enable debug logging for this FTP binding."
              }
            },
            "required": [
              "port",
              "address",
              "apply_proxy_config",
              "tls_mode",
              "tls_session_reuse",
              "certificate_file",
              "certificate_key_file",
              "min_tls_version",
              "force_passive_ip",
              "passive_ip_overrides",
              "passive_host",
              "client_auth_type",
              "tls_cipher_suites",
              "passive_connections_security",
              "active_connections_security",
              "ignore_ascii_transfer_type",
              "debug"
            ]
          }
        },
        "banner_file": {
          "type": "string",
          "description": "Path to file containing FTP banner text to display to clients."
        },
        "active_transfers_port_non_20": {
          "type": "boolean",
          "description": "Allow active transfers on ports other than 20."
        },
        "passive_port_range": {
          "type": "object",
          "description": "Port range for FTP passive mode connections.",
          "properties": {
            "start": {
              "type": "number",
              "description": "Starting port for passive mode range."
            },
            "end": {
              "type": "number",
              "description": "Ending port for passive mode range."
            }
          },
          "required": [
            "start",
            "end"
          ]
        },
        "disable_active_mode": {
          "type": "boolean",
          "description": "Disable FTP active mode transfers."
        },
        "enable_site": {
          "type": "boolean",
          "description": "Enable FTP SITE command."
        },
        "hash_support": {
          "type": "number",
          "description": "Hash algorithm support: 0 = disabled, 1 = SHA1, 2 = SHA256, 3 = SHA1+SHA256."
        },
        "combine_support": {
          "type": "number",
          "description": "Enable FTP COMB command support: 0 = disabled, 1 = enabled."
        },
        "certificate_file": {
          "type": "string",
          "description": "Path to global TLS certificate file for FTP server."
        },
        "certificate_key_file": {
          "type": "string",
          "description": "Path to global TLS private key file for FTP server."
        },
        "ca_certificates": {
          "type": "array",
          "description": "List of CA certificate files for client authentication.",
          "items": {}
        },
        "ca_revocation_lists": {
          "type": "array",
          "description": "List of certificate revocation lists.",
          "items": {}
        }
      },
      "required": [
        "bindings",
        "banner_file",
        "active_transfers_port_non_20",
        "passive_port_range",
        "disable_active_mode",
        "enable_site",
        "hash_support",
        "combine_support",
        "certificate_file",
        "certificate_key_file",
        "ca_certificates",
        "ca_revocation_lists"
      ]
    },
    "webdavd": {
      "type": "object",
      "description": "Configuration for the WebDAV server daemon.",
      "properties": {
        "bindings": {
          "type": "array",
          "description": "List of network bindings for the WebDAV server.",
          "items": {
            "type": "object",
            "properties": {
              "port": {
                "type": "number",
                "description": "Port number to bind the WebDAV server to."
              },
              "address": {
                "type": "string",
                "description": "IP address to bind the WebDAV server to (empty for all interfaces)."
              },
              "enable_https": {
                "type": "boolean",
                "description": "Enable HTTPS for this binding."
              },
              "certificate_file": {
                "type": "string",
                "description": "Path to TLS certificate file for this binding."
              },
              "certificate_key_file": {
                "type": "string",
                "description": "Path to TLS private key file for this binding."
              },
              "min_tls_version": {
                "type": "number",
                "description": "Minimum TLS version: 12 = TLS 1.2, 13 = TLS 1.3."
              },
              "client_auth_type": {
                "type": "number",
                "description": "Client authentication type: 0 = disabled, 1 = request cert, 2 = require cert."
              },
              "tls_cipher_suites": {
                "type": "array",
                "description": "List of enabled TLS cipher suites.",
                "items": {}
              },
              "tls_protocols": {
                "type": "array",
                "description": "List of enabled TLS protocols.",
                "items": {}
              },
              "prefix": {
                "type": "string",
                "description": "URL prefix for WebDAV endpoints."
              },
              "proxy_allowed": {
                "type": "array",
                "description": "List of allowed proxy IP addresses.",
                "items": {}
              },
              "client_ip_proxy_header": {
                "type": "string",
                "description": "Header name for real client IP."
              },
              "client_ip_header_depth": {
                "type": "number",
                "description": "Depth of proxy headers to check for client IP."
              },
              "disable_www_auth_header": {
                "type": "boolean",
                "description": "Disable WWW-Authenticate header."
              }
            },
            "required": [

            ]
          }
        },
        "certificate_file": {
          "type": "string",
          "description": "Path to global TLS certificate file for WebDAV server."
        },
        "certificate_key_file": {
          "type": "string",
          "description": "Path to global TLS private key file for WebDAV server."
        },
        "ca_certificates": {
          "type": "array",
          "description": "List of CA certificate files for client authentication.",
          "items": {}
        },
        "ca_revocation_lists": {
          "type": "array",
          "description": "List of certificate revocation lists.",
          "items": {}
        },
        "cors": {
          "type": "object",
          "description": "Cross-Origin Resource Sharing (CORS) configuration for WebDAV.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable CORS support."
            },
            "allowed_origins": {
              "type": "array",
              "description": "List of allowed origin domains.",
              "items": {}
            },
            "allowed_methods": {
              "type": "array",
              "description": "List of allowed HTTP methods.",
              "items": {}
            },
            "allowed_headers": {
              "type": "array",
              "description": "List of allowed HTTP headers.",
              "items": {}
            },
            "exposed_headers": {
              "type": "array",
              "description": "List of headers exposed to clients.",
              "items": {}
            },
            "allow_credentials": {
              "type": "boolean",
              "description": "Allow credentials in CORS requests."
            },
            "max_age": {
              "type": "number",
              "description": "Maximum age for preflight request cache in seconds."
            },
            "options_passthrough": {
              "type": "boolean",
              "description": "Pass OPTIONS requests to handlers."
            },
            "options_success_status": {
              "type": "number",
              "description": "Status code for successful OPTIONS requests."
            },
            "allow_private_network": {
              "type": "boolean",
              "description": "Allow private network requests."
            }
          },
          "required": [
            "enabled",
            "allowed_origins",
            "allowed_methods",
            "allowed_headers",
            "exposed_headers",
            "allow_credentials",
            "max_age",
            "options_passthrough",
            "options_success_status",
            "allow_private_network"
          ]
        },
        "cache": {
          "type": "object",
          "description": "Caching configuration for WebDAV performance optimization.",
          "properties": {
            "users": {
              "type": "object",
              "description": "User cache configuration.",
              "properties": {
                "expiration_time": {
                  "type": "number",
                  "description": "User cache expiration time in minutes."
                },
                "max_size": {
                  "type": "number",
                  "description": "Maximum number of users to cache."
                }
              },
              "required": [
                
              ]
            },
            "mime_types": {
              "type": "object",
              "description": "MIME type cache configuration for better WebDAV performance.",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable MIME type caching."
                },
                "max_size": {
                  "type": "number",
                  "description": "Maximum number of MIME types to cache."
                },
                "custom_mappings": {
                  "type": "array",
                  "description": "Custom file extension to MIME type mappings.",
                  "items": {}
                }
              },
              "required": [
                "enabled",
                "max_size",
                "custom_mappings"
              ]
            }
          },
          "required": [
            
          ]
        }
      },
      "required": [

      ]
    },
    "data_provider": {
      "type": "object",
      "description": "Configuration for the data provider (database) used to store users, folders, and other persistent data.",
      "properties": {
        "driver": {
          "type": "string",
          "description": "Database driver: 'sqlite', 'mysql', 'postgresql', 'cockroachdb', 'bolt', 'memory'."
        },
        "name": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "number"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "sslmode": {
          "type": "number"
        },
        "disable_sni": {
          "type": "boolean"
        },
        "target_session_attrs": {
          "type": "string"
        },
        "root_cert": {
          "type": "string"
        },
        "client_cert": {
          "type": "string"
        },
        "client_key": {
          "type": "string"
        },
        "connection_string": {
          "type": "string"
        },
        "sql_tables_prefix": {
          "type": "string"
        },
        "track_quota": {
          "type": "number"
        },
        "delayed_quota_update": {
          "type": "number"
        },
        "pool_size": {
          "type": "number"
        },
        "users_base_dir": {
          "type": "string"
        },
        "actions": {
          "type": "object",
          "properties": {
            "execute_on": {
              "type": "array",
              "items": {}
            },
            "execute_for": {
              "type": "array",
              "items": {}
            },
            "hook": {
              "type": "string"
            }
          },
          "required": [
            "execute_on",
            "execute_for",
            "hook"
          ]
        },
        "external_auth_hook": {
          "type": "string"
        },
        "external_auth_scope": {
          "type": "number"
        },
        "pre_login_hook": {
          "type": "string"
        },
        "post_login_hook": {
          "type": "string"
        },
        "post_login_scope": {
          "type": "number"
        },
        "check_password_hook": {
          "type": "string"
        },
        "check_password_scope": {
          "type": "number"
        },
        "password_hashing": {
          "type": "object",
          "properties": {
            "bcrypt_options": {
              "type": "object",
              "properties": {
                "cost": {
                  "type": "number"
                }
              },
              "required": [
                "cost"
              ]
            },
            "argon2_options": {
              "type": "object",
              "properties": {
                "memory": {
                  "type": "number"
                },
                "iterations": {
                  "type": "number"
                },
                "parallelism": {
                  "type": "number"
                }
              },
              "required": [
                "memory",
                "iterations",
                "parallelism"
              ]
            },
            "algo": {
              "type": "string"
            }
          },
          "required": [
            "bcrypt_options",
            "argon2_options",
            "algo"
          ]
        },
        "password_validation": {
          "type": "object",
          "properties": {
            "admins": {
              "type": "object",
              "properties": {
                "min_entropy": {
                  "type": "number"
                }
              },
              "required": [
                "min_entropy"
              ]
            },
            "users": {
              "type": "object",
              "properties": {
                "min_entropy": {
                  "type": "number"
                }
              },
              "required": [
                "min_entropy"
              ]
            }
          },
          "required": [
            "admins",
            "users"
          ]
        },
        "password_caching": {
          "type": "boolean"
        },
        "update_mode": {
          "type": "number"
        },
        "create_default_admin": {
          "type": "boolean"
        },
        "naming_rules": {
          "type": "number"
        },
        "is_shared": {
          "type": "number"
        },
        "node": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string"
            },
            "port": {
              "type": "number"
            },
            "proto": {
              "type": "string"
            }
          },
          "required": [
            "host",
            "port",
            "proto"
          ]
        },
        "backups_path": {
          "type": "string"
        }
      },
      "required": []
    },
    "httpd": {
      "type": "object",
      "description": "Configuration for the HTTP server that provides the web admin interface, REST API, and web client.",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "port": {
                "type": "number"
              },
              "address": {
                "type": "string"
              },
              "enable_web_admin": {
                "type": "boolean"
              },
              "enable_web_client": {
                "type": "boolean"
              },
              "enable_rest_api": {
                "type": "boolean"
              },
              "enabled_login_methods": {
                "type": "number"
              },
              "enable_https": {
                "type": "boolean"
              },
              "certificate_file": {
                "type": "string"
              },
              "certificate_key_file": {
                "type": "string"
              },
              "min_tls_version": {
                "type": "number"
              },
              "client_auth_type": {
                "type": "number"
              },
              "tls_cipher_suites": {
                "type": "array",
                "items": {}
              },
              "tls_protocols": {
                "type": "array",
                "items": {}
              },
              "proxy_allowed": {
                "type": "array",
                "items": {}
              },
              "client_ip_proxy_header": {
                "type": "string"
              },
              "client_ip_header_depth": {
                "type": "number"
              },
              "hide_login_url": {
                "type": "number"
              },
              "render_openapi": {
                "type": "boolean"
              },
              "oidc": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string"
                  },
                  "client_secret": {
                    "type": "string"
                  },
                  "client_secret_file": {
                    "type": "string"
                  },
                  "config_url": {
                    "type": "string"
                  },
                  "redirect_base_url": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "username_field": {
                    "type": "string"
                  },
                  "role_field": {
                    "type": "string"
                  },
                  "implicit_roles": {
                    "type": "boolean"
                  },
                  "custom_fields": {
                    "type": "array",
                    "items": {}
                  },
                  "insecure_skip_signature_check": {
                    "type": "boolean"
                  },
                  "debug": {
                    "type": "boolean"
                  }
                },
                "required": []
              },
              "security": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "allowed_hosts": {
                    "type": "array",
                    "items": {}
                  },
                  "allowed_hosts_are_regex": {
                    "type": "boolean"
                  },
                  "hosts_proxy_headers": {
                    "type": "array",
                    "items": {}
                  },
                  "https_redirect": {
                    "type": "boolean"
                  },
                  "https_host": {
                    "type": "string"
                  },
                  "https_proxy_headers": {
                    "type": "array",
                    "items": {}
                  },
                  "sts_seconds": {
                    "type": "number"
                  },
                  "sts_include_subdomains": {
                    "type": "boolean"
                  },
                  "sts_preload": {
                    "type": "boolean"
                  },
                  "content_type_nosniff": {
                    "type": "boolean"
                  },
                  "content_security_policy": {
                    "type": "string"
                  },
                  "permissions_policy": {
                    "type": "string"
                  },
                  "cross_origin_opener_policy": {
                    "type": "string"
                  },
                  "cache_control": {
                    "type": "string"
                  }
                },
                "required": [
                  "enabled",
                  "allowed_hosts",
                  "allowed_hosts_are_regex",
                  "hosts_proxy_headers",
                  "https_redirect",
                  "https_host",
                  "https_proxy_headers",
                  "sts_seconds",
                  "sts_include_subdomains",
                  "sts_preload",
                  "content_type_nosniff",
                  "content_security_policy",
                  "permissions_policy",
                  "cross_origin_opener_policy",
                  "cache_control"
                ]
              },
              "branding": {
                "type": "object",
                "properties": {
                  "web_admin": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "favicon_path": {
                        "type": "string"
                      },
                      "logo_path": {
                        "type": "string"
                      },
                      "disclaimer_name": {
                        "type": "string"
                      },
                      "disclaimer_path": {
                        "type": "string"
                      },
                      "default_css": {
                        "type": "array",
                        "items": {}
                      },
                      "extra_css": {
                        "type": "array",
                        "items": {}
                      }
                    },
                    "required": [
                      "name",
                      "short_name",
                      "favicon_path",
                      "logo_path",
                      "disclaimer_name",
                      "disclaimer_path",
                      "default_css",
                      "extra_css"
                    ]
                  },
                  "web_client": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "favicon_path": {
                        "type": "string"
                      },
                      "logo_path": {
                        "type": "string"
                      },
                      "disclaimer_name": {
                        "type": "string"
                      },
                      "disclaimer_path": {
                        "type": "string"
                      },
                      "default_css": {
                        "type": "array",
                        "items": {}
                      },
                      "extra_css": {
                        "type": "array",
                        "items": {}
                      }
                    },
                    "required": [
                      "name",
                      "short_name",
                      "favicon_path",
                      "logo_path",
                      "disclaimer_name",
                      "disclaimer_path",
                      "default_css",
                      "extra_css"
                    ]
                  }
                },
                "required": [
                  "web_admin",
                  "web_client"
                ]
              }
            },
            "required": [

            ]
          }
        },
        "templates_path": {
          "type": "string"
        },
        "static_files_path": {
          "type": "string"
        },
        "openapi_path": {
          "type": "string"
        },
        "web_root": {
          "type": "string"
        },
        "certificate_file": {
          "type": "string"
        },
        "certificate_key_file": {
          "type": "string"
        },
        "ca_certificates": {
          "type": "array",
          "items": {}
        },
        "ca_revocation_lists": {
          "type": "array",
          "items": {}
        },
        "signing_passphrase": {
          "type": "string"
        },
        "signing_passphrase_file": {
          "type": "string"
        },
        "token_validation": {
          "type": "number"
        },
        "max_upload_file_size": {
          "type": "number"
        },
        "cors": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "allowed_origins": {
              "type": "array",
              "items": {}
            },
            "allowed_methods": {
              "type": "array",
              "items": {}
            },
            "allowed_headers": {
              "type": "array",
              "items": {}
            },
            "exposed_headers": {
              "type": "array",
              "items": {}
            },
            "allow_credentials": {
              "type": "boolean"
            },
            "max_age": {
              "type": "number"
            },
            "options_passthrough": {
              "type": "boolean"
            },
            "options_success_status": {
              "type": "number"
            },
            "allow_private_network": {
              "type": "boolean"
            }
          },
          "required": [
            "enabled",
            "allowed_origins",
            "allowed_methods",
            "allowed_headers",
            "exposed_headers",
            "allow_credentials",
            "max_age",
            "options_passthrough",
            "options_success_status",
            "allow_private_network"
          ]
        },
        "setup": {
          "type": "object",
          "properties": {
            "installation_code": {
              "type": "string"
            },
            "installation_code_hint": {
              "type": "string"
            }
          },
          "required": [
            "installation_code",
            "installation_code_hint"
          ]
        },
        "hide_support_link": {
          "type": "boolean"
        }
      },
      "required": [

      ]
    },
    "telemetry": {
      "type": "object",
      "description": "Configuration for telemetry, metrics, and profiling endpoints.",
      "properties": {
        "bind_port": {
          "type": "number"
        },
        "bind_address": {
          "type": "string"
        },
        "enable_profiler": {
          "type": "boolean"
        },
        "auth_user_file": {
          "type": "string"
        },
        "certificate_file": {
          "type": "string"
        },
        "certificate_key_file": {
          "type": "string"
        },
        "min_tls_version": {
          "type": "number"
        },
        "tls_cipher_suites": {
          "type": "array",
          "items": {}
        },
        "tls_protocols": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "bind_port",
        "bind_address",
        "enable_profiler",
        "auth_user_file",
        "certificate_file",
        "certificate_key_file",
        "min_tls_version",
        "tls_cipher_suites",
        "tls_protocols"
      ]
    },
    "http": {
      "type": "object",
      "description": "Global HTTP client configuration for external requests and webhooks.",
      "properties": {
        "timeout": {
          "type": "number"
        },
        "retry_wait_min": {
          "type": "number"
        },
        "retry_wait_max": {
          "type": "number"
        },
        "retry_max": {
          "type": "number"
        },
        "ca_certificates": {
          "type": "array",
          "items": {}
        },
        "certificates": {
          "type": "array",
          "items": {}
        },
        "skip_tls_verify": {
          "type": "boolean"
        },
        "headers": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "timeout",
        "retry_wait_min",
        "retry_wait_max",
        "retry_max",
        "ca_certificates",
        "certificates",
        "skip_tls_verify",
        "headers"
      ]
    },
    "command": {
      "type": "object",
      "description": "Configuration for external command execution and timeouts.",
      "properties": {
        "timeout": {
          "type": "number"
        },
        "env": {
          "type": "array",
          "items": {}
        },
        "commands": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "timeout",
        "env",
        "commands"
      ]
    },
    "kms": {
      "type": "object",
      "description": "Key Management Service configuration for encryption keys.",
      "properties": {
        "secrets": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "master_key": {
              "type": "string"
            },
            "master_key_path": {
              "type": "string"
            }
          },
          "required": [
            "url",
            "master_key",
            "master_key_path"
          ]
        }
      },
      "required": [
        "secrets"
      ]
    },
    "mfa": {
      "type": "object",
      "description": "Multi-Factor Authentication configuration.",
      "properties": {
        "totp": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "issuer": {
                "type": "string"
              },
              "algo": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "issuer",
              "algo"
            ]
          }
        }
      },
      "required": [
        "totp"
      ]
    },
    "smtp": {
      "type": "object",
      "description": "SMTP configuration for sending emails and notifications.",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "number"
        },
        "from": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "auth_type": {
          "type": "number"
        },
        "encryption": {
          "type": "number"
        },
        "domain": {
          "type": "string"
        },
        "templates_path": {
          "type": "string"
        },
        "debug": {
          "type": "number"
        },
        "oauth2": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "number"
            },
            "tenant": {
              "type": "string"
            },
            "client_id": {
              "type": "string"
            },
            "client_secret": {
              "type": "string"
            },
            "refresh_token": {
              "type": "string"
            }
          },
          "required": [
            "provider",
            "tenant",
            "client_id",
            "client_secret",
            "refresh_token"
          ]
        }
      },
      "required": [
        "host",
        "port",
        "from",
        "user",
        "password",
        "auth_type",
        "encryption",
        "domain",
        "templates_path",
        "debug",
        "oauth2"
      ]
    },
    "plugins": {
      "type": "array",
      "description": "List of enabled plugins and their configurations.",
      "items": {}
    }
  }
}
